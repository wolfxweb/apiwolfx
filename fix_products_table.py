#!/usr/bin/env python3
"""
Script para adicionar a coluna sku √† tabela products
"""
import sys
sys.path.append('/Users/wolfx/Documents/wolfx/apiwolfx')

from app.config.database import engine
from sqlalchemy import text

def fix_products_table():
    """Adiciona a coluna sku √† tabela products"""
    
    print("=== CORRIGINDO TABELA PRODUCTS ===\n")
    
    try:
        with engine.connect() as conn:
            # Verificar se a coluna sku j√° existe
            check_query = text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name = 'products' 
                AND column_name = 'sku'
            """)
            
            result = conn.execute(check_query).fetchone()
            
            if result:
                print("‚úÖ Coluna 'sku' j√° existe na tabela 'products'")
                return
            
            print("üîß Adicionando coluna 'sku' √† tabela 'products'...")
            
            # Adicionar a coluna sku
            alter_query = text("""
                ALTER TABLE products 
                ADD COLUMN sku VARCHAR(100)
            """)
            
            conn.execute(alter_query)
            conn.commit()
            
            print("‚úÖ Coluna 'sku' adicionada com sucesso!")
            
            # Criar √≠ndice na coluna sku
            print("üîß Criando √≠ndice na coluna 'sku'...")
            try:
                index_query = text("""
                    CREATE INDEX ix_products_sku ON products (sku)
                """)
                conn.execute(index_query)
                conn.commit()
                print("‚úÖ √çndice criado com sucesso!")
            except Exception as e:
                print(f"‚ö†Ô∏è Aviso ao criar √≠ndice: {e}")
        
        print("\nüéâ Tabela 'products' corrigida com sucesso!")
        
    except Exception as e:
        print(f"‚ùå Erro ao corrigir tabela: {e}")

if __name__ == "__main__":
    fix_products_table()
