"""add superadmin table

Revision ID: 20251013_add_superadmin_table
Revises: 20251013_fix_orderstatus_enum
Create Date: 2025-10-13 19:20:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20251013_add_superadmin_table'
down_revision = '20251013_fix_orderstatus_enum'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Criar enum SuperAdminRole
    op.execute("CREATE TYPE superadminrole AS ENUM ('super_admin', 'plan_manager', 'company_manager');")
    
    # Criar tabela super_admins
    op.create_table('super_admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('super_admin', 'plan_manager', 'company_manager', name='superadminrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('can_manage_companies', sa.Boolean(), nullable=True),
    sa.Column('can_manage_plans', sa.Boolean(), nullable=True),
    sa.Column('can_manage_users', sa.Boolean(), nullable=True),
    sa.Column('can_view_analytics', sa.Boolean(), nullable=True),
    sa.Column('can_access_system_logs', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_super_admins_email'), 'super_admins', ['email'], unique=False)
    op.create_index(op.f('ix_super_admins_id'), 'super_admins', ['id'], unique=False)
    op.create_index(op.f('ix_super_admins_is_active'), 'super_admins', ['is_active'], unique=False)
    op.create_index(op.f('ix_super_admins_role'), 'super_admins', ['role'], unique=False)
    op.create_index(op.f('ix_super_admins_username'), 'super_admins', ['username'], unique=False)
    op.create_index('ix_super_admins_email_active', 'super_admins', ['email', 'is_active'], unique=False)
    op.create_index('ix_super_admins_role_active', 'super_admins', ['role', 'is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_super_admins_role_active', table_name='super_admins')
    op.drop_index('ix_super_admins_email_active', table_name='super_admins')
    op.drop_index(op.f('ix_super_admins_username'), table_name='super_admins')
    op.drop_index(op.f('ix_super_admins_role'), table_name='super_admins')
    op.drop_index(op.f('ix_super_admins_is_active'), table_name='super_admins')
    op.drop_index(op.f('ix_super_admins_id'), table_name='super_admins')
    op.drop_index(op.f('ix_super_admins_email'), table_name='super_admins')
    op.drop_table('super_admins')
    op.execute("DROP TYPE superadminrole;")
    # ### end Alembic commands ###
